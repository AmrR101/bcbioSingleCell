# API for bcbioSinglecell package

## Exported functions

aggregate_sparse_features(sparse, featureids)
aggregate_sparse_replicates(sparse, cellids)
barcode_metrics(run)
check_run(run)
check_sparse(sparse)
combine_features(...)
combine_technical_replicates(...)
create_bcbio_skeleton(base_dir = getwd(), run_dir = "skeleton", config_dir = "config", upload_dir = "final", project_dir = NULL, sample_dirs = NULL, organism, intgroup = "sample_name")
downloads(file = NULL)
filter_barcodes(...)
filter_cellular_barcodes(run, reads = 1000, min_genes = 500, max_genes = 5000, mito_ratio = 0.2, novelty = 0.8, show = TRUE)
indrop_i5_index_counts(log_file = file.path("logs", "indrop_i5_index_counts.log"))
load_csv_with_rownames(...)
load_run(upload_dir = "final", metadata_file = file.path("meta", "indrop_rnaseq.xlsx"), organism, intgroup = "sample_name")
load_sparsecounts(...)
make_bcbio_skeleton(...)
metadata_table(run)
plot_barcodes(run)
plot_cell_counts(run)
plot_genes_detected(run, min = 500, max = NULL)
plot_mito_counts(...)
plot_mito_counts_boxplot(...)
plot_mito_counts_histogram(...)
plot_mito_counts_scatterplot(...)
plot_mito_ratio(run, max = 0.2)
plot_novelty(run, min = 0.8)
plot_read_counts(run, min = 1000)
plot_reads_vs_genes(run, intgroup = NULL)
plot_total_cells(...)
plot_total_counts(...)
plot_total_vs_detected(...)
read_10x(data_dir)
read_10x_counts(...)
read_barcode_file(file_name)
read_bcbio_barcodes(run)
read_bcbio_counts(run, strip_version = TRUE)
read_bcbio_programs(run)
read_counts(matrix_file)
read_csv_with_rownames(filename, column)
strip_transcript_versions(sparse)
top_barcodes(run, n = 2)
tx2symbol(matrix, fromto, strip = FALSE)
unlist_barcodes(run)
write_counts(counts, gzip = FALSE)

## Exported data

.__C__bcbioSCDataSet: classRepresentation (S4[1])
