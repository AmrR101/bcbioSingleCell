# API for bcbioSinglecell package

## Exported functions

aggregate_sparse_features(sparse, featureids)
aggregate_sparse_replicates(sparse, cellids)
barcode_metrics(run)
check_run(run)
check_sparse(sparse)
create_bcbio_skeleton(base_dir = getwd(), run_dir = "skeleton", config_dir = "config", upload_dir = "final", project_dir = NULL, sample_dirs = NULL, organism, intgroup = "sample_name")
downloads(file = NULL)
filter_cellular_barcodes(run, min_genes = get("min_genes", envir = parent.frame()), max_genes = get("max_genes", envir = parent.frame()), mito_ratio = get("mito_ratio", envir = parent.frame()), novelty = get("novelty", envir = parent.frame()), plot = TRUE)
indrop_i5_index_counts(log_file = file.path("logs", "indrop_i5_index_counts.log"))
load_run(upload_dir = "final", metadata_file = file.path("meta", "indrop_rnaseq.xlsx"), organism, intgroup = "sample_name")
metadata_table(run)
plot_barcode(file_name, sample_name = NULL)
plot_barcodes(run)
plot_genes_detected(...)
plot_genes_detected_boxplot(run, min_genes = get("min_genes", envir = parent.frame()), max_genes = get("max_genes", envir = parent.frame()))
plot_genes_detected_histogram(run, min_genes = get("min_genes", envir = parent.frame()), max_genes = get("max_genes", envir = parent.frame()))
plot_mito(...)
plot_mito_boxplot(run, mito_ratio = get("mito_ratio", envir = parent.frame()))
plot_mito_histogram(run, mito_ratio = get("mito_ratio", envir = parent.frame()))
plot_mito_scatterplot(run, mito_ratio = NULL)
plot_novelty(...)
plot_novelty_boxplot(run, novelty = get("novelty", envir = parent.frame()))
plot_novelty_histogram(run, novelty = get("novelty", envir = parent.frame()))
plot_total_cells(run)
plot_total_counts(...)
plot_total_counts_boxplot(run)
plot_total_counts_histogram(run)
plot_total_vs_detected(run, colorby = "sample_name")
read_10x_counts(data_dir)
read_barcode_file(file_name)
read_bcbio_counts(run, strip_version = TRUE)
read_counts(matrix_file)
read_csv_with_rownames(filename, column)
strip_transcript_versions(counts)
tx2symbol(matrix, fromto, strip = FALSE)
write_counts(counts, gzip = FALSE)

## Exported data

max_genes: numeric (numeric[1])
min_genes: numeric (numeric[1])
mito_ratio: numeric (numeric[1])
novelty: numeric (numeric[1])
