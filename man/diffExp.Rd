% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/methods-diffExp.R
\docType{methods}
\name{diffExp}
\alias{diffExp}
\alias{diffExp}
\alias{diffExp,SingleCellExperiment-method}
\alias{diffExp,seurat-method}
\title{Differential Expression}
\usage{
diffExp(object, ...)

\S4method{diffExp}{SingleCellExperiment}(object, numerator, denominator,
  zeroWeights = c("zingeR", "zinbwave"), caller = c("edgeR", "DESeq2"))

\S4method{diffExp}{seurat}(object, numerator, denominator,
  zeroWeights = c("zingeR", "zinbwave"), caller = c("edgeR", "DESeq2"))
}
\arguments{
\item{object}{Object.}

\item{...}{Additional arguments.}

\item{numerator}{Group of cells to use in the numerator of the contrast
(e.g. treatment).}

\item{denominator}{Group of cells to use in the denominator of the contrast
(e.g. control).}

\item{zeroWeights}{Package to use for zero weight calculations. Defaults to
zinbwave but zingeR is also supported.}

\item{caller}{Package to use for differential expression calling. Defaults
to edgeR (faster for large datasets) but DESeq2 is also supported.}
}
\value{
\code{DEGLRT}.
}
\description{
Differential Expression
}
\section{zingeR-edgeR}{

We first perform a differential expression analysis using zingeR posterior
probabilities and focussing on the count component of the ZINB model. We use
edgeR to model the count component.

The weights are estimated with the core function of zingeR,
\code{zeroWeightsLS()}. It is important to be consistent with the normalization
procedure, i.e. if you use TMM normalization for the analysis, you should
also use it for estimating the zingeR posterior probabilities. The weights
can then be provided in the DGEList object which will be used for dispersion
estimation in the native edgeR \code{estimateDisp()} function.

After estimation of the dispersions and zingeR posterior probabilities, the
\code{glmWeightedF()} function is used for statistical inference. This is an
adapted function from the \code{glmLRT()} function of edgeR. It uses an F-test for
which the denominator degrees of freedom are by default adjusted according to
the downweighting of excess zeros (\code{ZI = TRUE}). Also, independent filtering
can be performed on the obtained p-values (\code{independentFiltering = TRUE}). We
use the independent filtering strategy that was originally implemented in
DESeq2. By default, the average fitted values are used as a filter criterion.

Consult the \href{https://goo.gl/4rTK1w}{zingeR vignette v2} for additional
information.
}

\examples{
# SingleCellExperiment ====
data <- metrics(cellranger_small)
numerator <- rownames(data)[which(data[["sampleName"]] == "proximal")]
denominator <- rownames(data)[which(data[["sampleName"]] == "distal")]

# zingeR-edgeR
x <- diffExp(
    object = cellranger_small,
    numerator = numerator,
    denominator = denominator,
    zeroWeights = "zingeR",
    caller = "edgeR"
)
class(x)
glimpse(x[["table"]])

# seurat ====
# Expression in cluster 3 relative to cluster 2
numerator <- Seurat::WhichCells(Seurat::pbmc_small, ident = 3L)
denominator <- Seurat::WhichCells(Seurat::pbmc_small, ident = 2L)

# zingeR-edgeR
x <- diffExp(
    object = Seurat::pbmc_small,
    numerator = numerator,
    denominator = denominator,
    zeroWeights = "zingeR",
    caller = "edgeR"
)
class(x)
glimpse(x[["table"]])
}
\seealso{
\itemize{
\item DESeq2: We're trying to follow the conventions used in DESeq2 for
contrasts, defining the name of the factor in the design formula,
numerator, and denominator level for the fold change calculations. See
\code{\link[DESeq2:results]{DESeq2::results()}} for more information.
\item Seurat: Note that Seurat currently uses the convention \code{cells.1} for the
numerator and \code{cells.2} for the denominator. See \code{\link[Seurat:DiffExpTest]{Seurat::DiffExpTest()}}
for additional information.
}
}
\author{
Michael Steinbaugh
}
